services:
  postgresdb:
    image: postgres:15.0
    container_name: pvz-postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DB_HOST=${DB_HOST}
    command: ["sh", "-c", "env && docker-entrypoint.sh postgres"]
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pvz-pg-data:/var/lib/postgresql/data

  postgresdbtest:
    image: postgres:15.0
    container_name: pvz-postgres-test
    hostname: postgrestest
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_TEST_PASSWORD}
      - POSTGRES_DB=${DB_TEST_NAME}
      - DB_TEST_HOST=${DB_TEST_HOST}
      - POSTGRES_PORT=5433  # Устанавливаем новый порт через переменную окружения
    command: ["sh", "-c", "env && docker-entrypoint.sh postgres"]
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pvz-pg-test-data:/var/lib/postgresql/data

  migrations:
      image: migrations-pvz
      build:
        context: ./
        dockerfile: docker/migrations.dockerfile
      command: [
        # DB waiter
        "/usr/local/bin/wait-for", "${DB_HOST}:${DB_PORT}", "--",
        # dbmate auto migrations
        "/usr/local/bin/dbmate", "--url", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable", "up",
        # remove
        "rm", "-rf", "/db/migrations"
        ]
      env_file:
        - .env
      depends_on:
        - postgresdb

  migrationstest:
    image: migrations-pvz
    build:
      context: ./
      dockerfile: docker/migrations.dockerfile
    command: [
      # DB waiter
      "/usr/local/bin/wait-for", "${DB_TEST_HOST}:${DB_PORT}", "--",
      # dbmate auto migrations
      "/usr/local/bin/dbmate", "--url", "postgres://${DB_USER}:${DB_TEST_PASSWORD}@${DB_TEST_HOST}:${DB_PORT}/${DB_TEST_NAME}?sslmode=disable", "up",
      # remove
      "rm", "-rf", "/db/migrations"
      ]
    env_file:
      - .env
    depends_on:
      - postgresdbtest

  pvz:
    image: pvz
    build:
      context: ./
      dockerfile: docker/pvz.dockerfile
    env_file:
    - .env
    ports:
      - "8080:8080"
    depends_on:
      - migrations
      - postgresdb

volumes:
  pvz-pg-data: {}
  pvz-pg-test-data: {}